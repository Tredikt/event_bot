import asyncio
from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.enums import ChatAction

from core.utils.enums import Variables
from core.utils.answers import zabegayev_answers
from core.utils.zabegayev_data import buttons_1, buttons_2, zabegayev_correct_answers
from core.utils.animate_waiting_message import animate_next_question_loading, send_animation_one_question
from core.utils.scoring_utils import add_user_score


router = Router(name="zabegayev_callback_router")


@router.callback_query(F.data == "zabegayev_start_interactive")
async def zabegayev_start_interactive(call: CallbackQuery, variables: Variables, current_speaker: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ—ç—Ç–∞–ø–Ω–æ"""
    await call.answer()
    await call.message.delete()
    await asyncio.sleep(1)
    
    await send_animation_one_question(
        call=call,
        variables=variables,
        start_text="<b>Sprinter —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ \"—Ç–æ–ª—Å—Ç—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\" –≤ –∫–∞–∂–¥—É—é —Å–∏—Å—Ç–µ–º—É.</b>",
        question_text="–≠—Ç–æ –ø—Ä–∞–≤–¥–∞ –∏–ª–∏ –º–∏—Ñ?",
        buttons_data=buttons_1,
        callback_prefix="zabegayev_question_1"
    )


@router.callback_query(F.data.startswith("zabegayev_question_1_"))
async def zabegayev_question_1(call: CallbackQuery, variables: Variables):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ó–∞–±–µ–≥–∞–µ–≤–∞"""
    await call.answer()
    selected_index = int(call.data.split("_")[-1])
    correct_answer_index = zabegayev_correct_answers[1]
    await call.message.edit_reply_markup(reply_markup=None)
    await variables.bot.send_chat_action(chat_id=call.message.chat.id, action=ChatAction.TYPING)
    await asyncio.sleep(2)
    
    if selected_index == correct_answer_index:
        result_text = zabegayev_answers['zabegaev_1']['correct']
        result_text += "\n\nüéØ <i><b>+1 –±–∞–ª–ª.</b> –ï–¥–µ–º –¥–∞–ª—å—à–µ!</i>"
        points = 1
    else:
        result_text = zabegayev_answers['zabegaev_1']['incorrect']
        points = 0
    await add_user_score(call=call, variables=variables, interactive_name="zabegayev_question_1", points=points)

    await call.message.answer(text=result_text)
    await asyncio.sleep(2)
    await animate_next_question_loading(message=call.message, bot=call.bot)
    await send_animation_one_question(
        call=call,
        variables=variables,
        start_text="üìç <b>–ê —Ç–µ–ø–µ—Ä—å —Ç–∞–∫:\nSprinter</b> –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª–æ–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏ —É—Å–ª–æ–≤–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, <i>–±–µ–∑ —Ä—É—á–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤.</i>",
        question_text="<b>–≠—Ç–æ –ø—Ä–∞–≤–¥–∞ –∏–ª–∏ –Ω–µ—Ç?</b>",
        buttons_data=buttons_2,
        callback_prefix="zabegayev_question_2"
    )


@router.callback_query(F.data.startswith("zabegayev_question_2_"))
async def zabegayev_question_2(call: CallbackQuery, variables: Variables):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ç–æ—Ä–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ó–∞–±–µ–≥–∞–µ–≤–∞"""
    await call.answer()
    selected_index = int(call.data.split("_")[-1])
    correct_answer_index = zabegayev_correct_answers[2]
    await call.message.edit_reply_markup(reply_markup=None)
    await variables.bot.send_chat_action(chat_id=call.message.chat.id, action=ChatAction.TYPING)
    await asyncio.sleep(2)
    
    if selected_index == correct_answer_index:
        result_text = zabegayev_answers['zabegaev_2']['correct']
        result_text += "\n\nüéØ <i><b>+1 –±–∞–ª–ª.</b> –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å.</i>"
        points = 1
    else:
        result_text = zabegayev_answers['zabegaev_2']['incorrect']
        points = 0
    await add_user_score(call=call, variables=variables, interactive_name="zabegayev_question_2", points=points)

    await call.message.answer(text=result_text)
